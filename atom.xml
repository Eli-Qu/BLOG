<?xml version="1.0" encoding="utf-8"?>
<feed xmlns="http://www.w3.org/2005/Atom">
  <title>Eli-Qu</title>
  
  <subtitle>学习，记录，分享</subtitle>
  <link href="/atom.xml" rel="self"/>
  
  <link href="https://eli-qu.github.io/"/>
  <updated>2020-07-12T10:12:28.614Z</updated>
  <id>https://eli-qu.github.io/</id>
  
  <author>
    <name>Eli-Qu</name>
    
  </author>
  
  <generator uri="https://hexo.io/">Hexo</generator>
  
  <entry>
    <title>我是如何搭建这个blog的</title>
    <link href="https://eli-qu.github.io/2020/07/12/%E6%88%91%E6%98%AF%E5%A6%82%E4%BD%95%E6%90%AD%E5%BB%BA%E8%BF%99%E4%B8%AAblog%E7%9A%84/"/>
    <id>https://eli-qu.github.io/2020/07/12/%E6%88%91%E6%98%AF%E5%A6%82%E4%BD%95%E6%90%AD%E5%BB%BA%E8%BF%99%E4%B8%AAblog%E7%9A%84/</id>
    <published>2020-07-12T07:38:28.000Z</published>
    <updated>2020-07-12T10:12:28.614Z</updated>
    
    <content type="html"><![CDATA[<link rel="stylesheet" class="aplayer-secondary-style-marker" href="\assets\css\APlayer.min.css"><script src="\assets\js\APlayer.min.js" class="aplayer-secondary-script-marker"></script><h1 id="注册github"><a href="#注册github" class="headerlink" title="注册github"></a>注册github</h1><p>这个内容很简单，百度一下都会。我也不细说了，之前因为在学校里有一个项目所以我本来就有github账号。</p><h1 id="配置git连接github"><a href="#配置git连接github" class="headerlink" title="配置git连接github"></a>配置git连接github</h1><h2 id="git安装"><a href="#git安装" class="headerlink" title="git安装"></a>git安装</h2><p>过程可百度不详细阐述。<strong>下载地址：<a href="https://git-scm.com/downloads" target="_blank" rel="noopener">https://git-scm.com/downloads</a></strong></p><h2 id="首先查看本地是否存在SSH-Keys"><a href="#首先查看本地是否存在SSH-Keys" class="headerlink" title="首先查看本地是否存在SSH Keys"></a>首先查看本地是否存在SSH Keys</h2><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">$ <span class="built_in">cd</span> ~/.ssh</span><br></pre></td></tr></table></figure><p>本机没有该目录，然后进行下面的操作</p><h2 id="SSH-Key的创建和存储"><a href="#SSH-Key的创建和存储" class="headerlink" title="SSH Key的创建和存储"></a>SSH Key的创建和存储</h2><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">$ ssh-keygen -t rsa -C <span class="string">"我的邮箱"</span></span><br></pre></td></tr></table></figure><p>然后会提示<strong>密钥的存储位置</strong></p><p><img src= "/img/loading.gif" data-src="/img/passage-1/3.png" alt="密钥存储位置"></p><p>图里圈的位置可以写自己要存储的路径，我没有写，就让他存在默认的位置了。直接enter进入下一步<strong>设置密码</strong>。</p><p><img src= "/img/loading.gif" data-src="/img/passage-1/4.png" alt="输入密码"></p><p>因为我记不住密码，所以我这里也没有设置，enter两次进行下一步之后会有提示<strong>SSH KEY的存储路径</strong>。打开这个路径就会有如下图的三个文件。<strong>SSH KEY就存在圈的文件里面。</strong></p><p><img src= "/img/loading.gif" data-src="/img/passage-1/5.png" alt="SSH KEY的存储路径"></p><p>可以用记事本或者notepad++打开文件，<strong>把内容复制下来</strong><br>然后打开github的setting页面中的SSH Key的选项，按new SSH key，输入保存会出现以下界面</p><p><img src= "/img/loading.gif" data-src="/img/passage-1/6.png" alt="输入SSH KEY"></p><p>然后回到git界面，运行命令</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">$ ssh -T git@github.com</span><br></pre></td></tr></table></figure><p>出现如下图的提示信息</p><p><img src= "/img/loading.gif" data-src="/img/passage-1/7.png" alt="提示信息"></p><p>这样就表示成功连接到GitHub了。</p><h1 id="安装Nodejs"><a href="#安装Nodejs" class="headerlink" title="安装Nodejs"></a>安装Nodejs</h1><h2 id="官网下载"><a href="#官网下载" class="headerlink" title="官网下载"></a>官网下载</h2><p><strong>下载链接：<a href="https://nodejs.org/en/" target="_blank" rel="noopener">https://nodejs.org/en/</a></strong><br>进入官网下载LTS版本的安装包</p><p><img src= "/img/loading.gif" data-src="/img/passage-1/8.png" alt="LTS"></p><p>按照提示一步步下去安装，它会提示安装一些工具什么的。<br>安装完成之后<strong>重启电脑</strong>，然后查看一下版本号。</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">$ node -v</span><br><span class="line">$ npm -v</span><br></pre></td></tr></table></figure><p>返回相应的版本号则表示安装成功。我的时node v12.18.2 和npm v6.14.5</p><h2 id="安装镜像源"><a href="#安装镜像源" class="headerlink" title="安装镜像源"></a>安装镜像源</h2><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">$ npm install -g cnpm --registry=https://registry.npm.taobao.org</span><br></pre></td></tr></table></figure><div class="note warning">            <p>这里出现了警告提示<br><img src= "/img/loading.gif" data-src="/img/passage-1/12.png" alt="warning"><br><code>npm WARN deprecated request@2.88.2: request has been deprecated</code><br>去找了一下网上的方法，暂时还没有能完全解决这个warn的，不过好像也没有影响。</p>          </div><p>然后查看一下版本信息</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">$ cnpm v</span><br></pre></td></tr></table></figure><p>确认已经完成安装</p><h1 id="安装HEXO"><a href="#安装HEXO" class="headerlink" title="安装HEXO"></a>安装HEXO</h1><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">$ cnpm install -g hexo-cli</span><br></pre></td></tr></table></figure><p>等待安装，界面如下<br><img src= "/img/loading.gif" data-src="/img/passage-1/15.png" alt="安装HEXO"><br>然后确认版本信息</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">$ hexo -v</span><br></pre></td></tr></table></figure><p>返回相应的信息，完成安装。<br><img src= "/img/loading.gif" data-src="/img/passage-1/16.png" alt="hexo版本"></p><h1 id="初始化操作"><a href="#初始化操作" class="headerlink" title="初始化操作"></a>初始化操作</h1><ol><li><p>创建文件夹BLOG，进入文件夹右键点击git bash here</p></li><li><p>初始化hexo文件</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">$ hexo init</span><br></pre></td></tr></table></figure><p>等待加载完成，最后BLOG文件夹里面会出现一些相关的文件</p></li><li><p>启动hexo</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">$ hexo s</span><br></pre></td></tr></table></figure><p>出现提示信息<br><img src= "/img/loading.gif" data-src="/img/passage-1/19.png" alt="启动hexo"><br>把这个地址输入到浏览器中，即可在本地访问自己的hexo页面</p><h1 id="部署到GitHub"><a href="#部署到GitHub" class="headerlink" title="部署到GitHub"></a>部署到GitHub</h1><h2 id="安装插件"><a href="#安装插件" class="headerlink" title="安装插件"></a>安装插件</h2><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">$ cnpm install --save hexo-deployer-git</span><br></pre></td></tr></table></figure><p>等待加载完成</p><h2 id="修改配置"><a href="#修改配置" class="headerlink" title="修改配置"></a>修改配置</h2><p>进入之前创建的BLOG目录，可以用记事本或者notepad打开_config.yml文件<br>找到图中位置<br><img src= "/img/loading.gif" data-src="/img/passage-1/24.png" alt="deploy修改"><br>修改为<br><img src= "/img/loading.gif" data-src="/img/passage-1/25.png" alt="deploy修改"></p><div class="note info">            <p>Repo里面是新建仓库的地址，这里我一开始建的时候没注意导致后面网页浏览的时候感觉不太方便。后来去rename了一下，改成了xxxxx.github.io</p>          </div><p>保存关闭</p><h2 id="完成部署"><a href="#完成部署" class="headerlink" title="完成部署"></a>完成部署</h2><p>回到git界面，继续输入</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">$ hexo d</span><br></pre></td></tr></table></figure><p>等到提示完成，即部署完成。此时GitHub的库里应该有了最原始的代码。然后把名称”xxxxxx.github.io”复制输入到浏览器中，就会自动跳转到博客页面了。</p><h1 id="更换博客主题"><a href="#更换博客主题" class="headerlink" title="更换博客主题"></a>更换博客主题</h1><h2 id="主题选择"><a href="#主题选择" class="headerlink" title="主题选择"></a>主题选择</h2><p>我是某乎上看了一下大家推荐的主题，个人感觉不错的有以下几个</p><ul><li>Butterfly - 主界面一个巨大的图片，视觉冲击感超强。功能也很齐全</li><li>Fluid – 和butterfly差不多，不过感觉上butterfly更花一点</li><li>Ocean – 也是一个大图片的，我就是喜欢视觉感强的</li><li>Next – 功能多，据说比较适合写代码什么的</li></ul><p>综上，不用想了就是butterfly了！<br><strong>主题地址：<a href="https://github.com/jerryc127/hexo-theme-butterfly" target="_blank" rel="noopener">https://github.com/jerryc127/hexo-theme-butterfly</a></strong></p><h2 id="下载主题"><a href="#下载主题" class="headerlink" title="下载主题"></a>下载主题</h2><p>在BLOG路径里面打开git</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">$ git <span class="built_in">clone</span> -b dev https://github.com/jerryc127/hexo-theme-butterfly.git themes/Butterfly</span><br></pre></td></tr></table></figure><p>然后就会把butterfly相关的文件都下载到themes文件里了。</p><h2 id="修改配置-1"><a href="#修改配置-1" class="headerlink" title="修改配置"></a>修改配置</h2><p>打开BLOG的站点_config.yml,把里面的theme选项改成butterfly<br><img src= "/img/loading.gif" data-src="/img/passage-1/27.png" alt="修改主题"><br>然后执行命令</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line">$ hexo clean</span><br><span class="line">$ hexo g</span><br><span class="line">$ hexo s</span><br></pre></td></tr></table></figure><div class="note danger">            <p><strong>遇到问题：更换主题后预览页面不成功</strong><br>出现如下字符：extends includes/layout.pug block content include ./includes/mixins/post-ui.pug #recent-posts.recent-posts +postUI include includes/pagination.pug<br><strong>解决方法</strong></p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">$ npm install --save hexo-renderer-jade hexo-generator-feed hexo-generator-sitemap hexo-browsersync hexo-generator-archive</span><br></pre></td></tr></table></figure>          </div><p>然后再次执行hexo clean，hexo g，hexo s<br>最终成功预览页面</p><h2 id="更新GitHub库"><a href="#更新GitHub库" class="headerlink" title="更新GitHub库"></a>更新GitHub库</h2><p>对博客进行更改后要记得同步到GitHub上</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">hexo d</span><br></pre></td></tr></table></figure><div class="note danger">            <p><strong>遇到报错：ERROR Deployer not found: git</strong><br><strong>解决方法：</strong></p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">$ npm install --save hexo-deployer-git</span><br></pre></td></tr></table></figure>          </div><p>再次运行即可。</p></li></ol>]]></content>
    
    <summary type="html">
    
      hexo+github 搭建博客
    
    </summary>
    
    
      <category term="hexo" scheme="https://eli-qu.github.io/categories/hexo/"/>
    
    
      <category term="HEXO" scheme="https://eli-qu.github.io/tags/HEXO/"/>
    
  </entry>
  
</feed>
